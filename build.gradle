// Update Gradle Wrapper using: ./gradlew wrapper --distribution-type bin --gradle-version <version>
// See Gradle's releases here: https://gradle.org/releases/

plugins {
    id("java-library")
    id("fabric-loom") version "1.5-SNAPSHOT"
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

dependencies {
    minecraft("com.mojang:minecraft:${rootProject.minecraft_version}")
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${rootProject.minecraft_version}:${rootProject.parchment_version}@zip")
    }

    modImplementation("net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}")
    modApi("net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}")

    // https://modrinth.com/mod/voxelmap-updated/version/1.20.1-1.12.13
    modImplementation(include("maven.modrinth:voxelmap-updated:uDfYW2uw"))

    // https://modrinth.com/mod/modmenu/version/7.2.2
    modCompileOnly("maven.modrinth:modmenu:lEkperf6")
}

repositories {
    maven {
        name "ParchmentMC"
        url "https://maven.parchmentmc.org"
    }
    maven {
        url "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }
}

processResources {
    filesMatching("fabric.mod.json") {
        expand(rootProject.properties)
    }
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
    withSourcesJar()
}

tasks {
    compileJava {
        options.encoding = "UTF-8"
        options.release = 17
    }
}

jar {
    from("LICENCE") {
        rename { "LICENSE_${project.archives_base_name}"} // Use US spelling
    }
}

tasks.register("cleanJar", Delete) {
    delete fileTree("./dist") {
        include "*.jar"
    }
}

tasks.register("copyJar", Copy) {
    dependsOn cleanJar
    from remapJar
    into "./dist"
    rename "(.*?)\\.jar", "\$1-fabric.jar"
}

build.dependsOn copyJar
